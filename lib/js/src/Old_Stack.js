// Generated by BUCKLESCRIPT VERSION 4.0.6, PLEASE EDIT WITH CARE
'use strict';

var List = require("bs-platform/lib/js/list.js");
var Curry = require("bs-platform/lib/js/curry.js");
var Js_dict = require("bs-platform/lib/js/js_dict.js");
var ReactNavigation = require("react-navigation");

function Make(Config) {
  var stateToJs = function (param) {
    return {
            key: param[/* key */0],
            params: param[/* params */1]
          };
  };
  var stateFromJs = function (param) {
    return /* record */[
            /* key */param.key,
            /* params */param.params
          ];
  };
  var navigationPropToJs = function (param) {
    return {
            push: param[/* push */0],
            goBack: param[/* goBack */1],
            state: param[/* state */2]
          };
  };
  var navigationPropFromJs = function (param) {
    return /* record */[
            /* push */param.push,
            /* goBack */param.goBack,
            /* state */param.state
          ];
  };
  var configureRouteToJs = function (param) {
    return {
            screen: param[/* screen */0]
          };
  };
  var configureRouteFromJs = function (param) {
    return /* record */[/* screen */param.screen];
  };
  var configure = function (mapRoute, initial) {
    var routes = Js_dict.fromList(List.map((function (route) {
                var match = Curry._1(mapRoute, route);
                var config = match[1];
                var makeNavigationProp = function (orgNav) {
                  var bindPush = function (r) {
                    var match = Curry._1(mapRoute, r);
                    orgNav.navigation.push(match[0], ( r[0] ));
                    return /* () */0;
                  };
                  var partial_arg = orgNav.navigation;
                  return Curry._1(config[/* screen */0], /* record */[
                              /* push */bindPush,
                              /* goBack */(function () {
                                  partial_arg.goBack();
                                  return /* () */0;
                                }),
                              /* state */stateFromJs(orgNav.navigation.state)
                            ]);
                };
                var optioin = {
                  screen: makeNavigationProp
                };
                return /* tuple */[
                        match[0],
                        optioin
                      ];
              }), Config[/* routes */0]));
    var match = Curry._1(mapRoute, initial);
    return ReactNavigation.createAppContainer(ReactNavigation.createStackNavigator(routes, {
                    initialRouteName: match[0]
                  }));
  };
  var Navigator = /* module */[
    /* stateToJs */stateToJs,
    /* stateFromJs */stateFromJs,
    /* navigationPropToJs */navigationPropToJs,
    /* navigationPropFromJs */navigationPropFromJs,
    /* configureRouteToJs */configureRouteToJs,
    /* configureRouteFromJs */configureRouteFromJs,
    /* configure */configure
  ];
  return /* module */[/* Navigator */Navigator];
}

exports.Make = Make;
/* Js_dict Not a pure module */
